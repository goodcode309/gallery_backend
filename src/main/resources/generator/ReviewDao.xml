<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.dao.ReviewDao">
  <resultMap id="BaseResultMap" type="com.example.entity.Review">
    <id column="review_id" jdbcType="INTEGER" property="reviewId" />
    <result column="painting_id" jdbcType="INTEGER" property="paintingId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="position_id" jdbcType="INTEGER" property="positionId" />
    <result column="rotation_id" jdbcType="INTEGER" property="rotationId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    review_id, painting_id, user_id, content, position_id, rotation_id
  </sql>
  <select id="selectByExample" parameterType="com.example.entity.ReviewExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from review
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from review
    where review_id = #{reviewId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from review
    where review_id = #{reviewId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.entity.ReviewExample">
    delete from review
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="review_id" keyProperty="reviewId" parameterType="com.example.entity.Review" useGeneratedKeys="true">
    insert into review (painting_id, user_id, content, 
      position_id, rotation_id)
    values (#{paintingId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR}, 
      #{positionId,jdbcType=INTEGER}, #{rotationId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="review_id" keyProperty="reviewId" parameterType="com.example.entity.Review" useGeneratedKeys="true">
    insert into review
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="paintingId != null">
        painting_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="positionId != null">
        position_id,
      </if>
      <if test="rotationId != null">
        rotation_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="paintingId != null">
        #{paintingId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="positionId != null">
        #{positionId,jdbcType=INTEGER},
      </if>
      <if test="rotationId != null">
        #{rotationId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.entity.ReviewExample" resultType="java.lang.Long">
    select count(*) from review
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update review
    <set>
      <if test="record.reviewId != null">
        review_id = #{record.reviewId,jdbcType=INTEGER},
      </if>
      <if test="record.paintingId != null">
        painting_id = #{record.paintingId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.positionId != null">
        position_id = #{record.positionId,jdbcType=INTEGER},
      </if>
      <if test="record.rotationId != null">
        rotation_id = #{record.rotationId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update review
    set review_id = #{record.reviewId,jdbcType=INTEGER},
      painting_id = #{record.paintingId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      content = #{record.content,jdbcType=VARCHAR},
      position_id = #{record.positionId,jdbcType=INTEGER},
      rotation_id = #{record.rotationId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.entity.Review">
    update review
    <set>
      <if test="paintingId != null">
        painting_id = #{paintingId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="positionId != null">
        position_id = #{positionId,jdbcType=INTEGER},
      </if>
      <if test="rotationId != null">
        rotation_id = #{rotationId,jdbcType=INTEGER},
      </if>
    </set>
    where review_id = #{reviewId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.entity.Review">
    update review
    set painting_id = #{paintingId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      content = #{content,jdbcType=VARCHAR},
      position_id = #{positionId,jdbcType=INTEGER},
      rotation_id = #{rotationId,jdbcType=INTEGER}
    where review_id = #{reviewId,jdbcType=INTEGER}
  </update>
</mapper>